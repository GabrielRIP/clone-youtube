{"version":3,"sources":["img/loading.jpeg","components/templates/DisplayPlayer.jsx","components/templates/MenuInfo.jsx","redux/actions/MenuInfoAction.js","components/organisms/ListPlayer.jsx","components/templates/MenuPlayer.jsx","App.js","redux/reducers/MenuInfoReducer.js","redux/reducers/RootReducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["DisplayPlayer","newMenuInfo","useSelector","state","returnArray","className","id","src","Loading","alt","link","title","frameborder","allow","allowfullscreen","MenuInfo","views","aria-hidden","focusable","role","viewBox","fill","d","logo","chanel","subs","LOAD_INFO","load_info","newArray","type","payload","ListPlayer","titulo","canal","vistas","image","classId","dispatch","useDispatch","onClick","e","elementoClase","boxGeneral","document","querySelector","target","tagName","alert","parentElement","classList","value","console","log","DataJson","setTimeout","scrollTop","data-icon","MenuPlayer","map","elem","App","defaultState","action","RootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wRAAe,G,MAAA,IAA0B,sC,OCK1B,SAASA,IACtB,IAAMC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAYG,eAE3D,OACE,wBAAQC,UAAU,SAAlB,SACGJ,EAAYK,IACX,qCACE,qBAAKC,IAAKC,EAASC,IAAI,YAAYJ,UAAU,eAC7C,wBAAQE,IAAKN,EAAYS,KAAMC,MAAM,uBAAuBC,YAAY,IAAIC,MAAM,4FAA4FC,iBAAe,S,MCTxL,SAASC,IACtB,IAAMd,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAYG,eAE3D,OACE,0BAASC,UAAU,kBAAnB,UACE,0BAASA,UAAU,YAAnB,UACE,oBAAIA,UAAU,QAAd,SAAuBJ,EAAYU,QACnC,mBAAGN,UAAU,WAAb,SAAyBJ,EAAYe,QACrC,qBAAKC,cAAY,OAAOC,UAAU,QAAQC,KAAK,MAAMC,QAAQ,cAA7D,SAA2E,sBAAMC,KAAK,eAAeC,EAAE,wPAEzG,0BAASjB,UAAU,cAAnB,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKE,IAAKN,EAAYsB,KAAMd,IAAI,SAASJ,UAAU,SACnD,qBAAIA,UAAU,SAAd,UACE,sBAAMA,UAAU,KAAhB,SAAsBJ,EAAYuB,SAClC,sBAAMnB,UAAU,OAAhB,SAAwBJ,EAAYwB,aAGxC,wBAAQpB,UAAU,OAAlB,+B,gBCtBKqB,EAAY,YASVC,EAPG,SAAEC,GAClB,MAAO,CACLC,KAAMH,EACNI,QAASF,I,OCCE,SAASG,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC3DC,EAAWC,cAyBjB,OACE,0BAASjC,UAAS,kBAAa+B,GAAWG,QAxB5C,SAAmBC,GACjB,IAAIC,EACEC,EAAaC,SAASC,cAAc,SAE1C,GAAwB,QAArBJ,EAAEK,OAAOC,SACW,SAArBN,EAAEK,OAAOC,QACTC,MAAM,kCACD,CACL,QAAO,GACL,IAA2B,QAArBP,EAAEK,OAAOC,SACa,OAArBN,EAAEK,OAAOC,SACY,MAArBN,EAAEK,OAAOC,QACdL,EAAgBD,EAAEK,OAAOG,cAAcA,cAAcC,UAAU,GAC/D,MACF,IAAmC,kBAA7BT,EAAEK,OAAOI,UAAUC,MACvBT,EAAgBD,EAAEK,OAAOG,cAAcC,UAAU,GACjD,MACF,QAAS,OAAOE,QAAQC,IAAI,WAE9Bf,EAASV,EAAU0B,EAASZ,EAAgB,KAC5Ca,YAAW,WAAOZ,EAAWa,UAAY,IAAI,OAI/C,UACE,qBAAKlD,UAAU,iBAAf,SACE,qBAAKE,IAAK4B,EAAO1B,IAAI,2BAEvB,sBAAKJ,UAAU,gBAAf,UACE,qBAAKY,cAAY,OAAOC,UAAU,QAAQsC,YAAU,aAAarC,KAAK,MAAMC,QAAQ,cAApF,SAAkG,sBAAMC,KAAK,eAAeC,EAAE,0NAC9H,6BAAKU,IACL,4BAAIC,IACJ,4BAAIC,UCrCG,SAASuB,IACtB,OACE,yBAASpD,UAAU,oBAAnB,SACGgD,EAASK,KAAI,SAAAC,GAAI,OAChB,cAAC5B,EAAD,CAEEC,OAAQ2B,EAAKhD,MACbsB,MAAO0B,EAAKnC,OACZU,OAAQyB,EAAK3C,MACbmB,MAAOwB,EAAKxB,MACZC,QAASuB,EAAKrD,IALTqD,EAAKrD,SCFL,SAASsD,IACtB,OACE,sBAAKvD,UAAU,MAAf,UACE,cAACL,EAAD,IACA,uBAAMK,UAAU,OAAhB,UACE,cAACU,EAAD,IACA,cAAC0C,EAAD,U,0BCZFI,EAAe,CACnBzD,YAAa,CACXO,MAAO,iBACPa,OAAQ,aACRR,MAAO,UACPS,KAAM,sBACNF,KAAM,wGACNb,KAAM,KAeKT,EAXK,WAAqC,IAAnCE,EAAkC,uDAA1B0D,EAAcC,EAAY,uCACtD,OAAOA,EAAOjC,MACZ,KAAKH,EACH,OAAO,2BACFvB,GADL,IAEEC,YAAa0D,EAAOhC,UAExB,QAAS,OAAO3B,ICZL4D,EAJKC,YAAgB,CAClC/D,gBCEIgE,EAAmBC,OAAOC,sCAAwCC,IAMzDC,EAJDC,YAAYP,EAAaE,EACrCM,YAAgBC,OCGEC,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ1B,SAASqC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,iB","file":"static/js/main.4646de67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.3b1c8aa9.jpeg\";","import { useSelector } from 'react-redux'\n\nimport './style/displayPlayer.scss'\nimport Loading from '../../img/loading.jpeg'\n\nexport default function DisplayPlayer() {\n  const newMenuInfo = useSelector(state => state.newMenuInfo.returnArray)\n\n  return (\n    <header className=\"header\">\n      {newMenuInfo.id &&\n        <>\n          <img src={Loading} alt=\"Loading..\" className=\"imgLoading\"/>\n          <iframe src={newMenuInfo.link} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer;  autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        </>\n      }\n    </header>\n  )\n}\n","import { useSelector } from 'react-redux'\n\nimport './style/menuInfo.scss'\n\nexport default function MenuInfo() {\n  const newMenuInfo = useSelector(state => state.newMenuInfo.returnArray)\n\n  return (\n    <section className=\"sectionMenuInfo\">\n      <article className=\"articleUp\">\n        <h2 className=\"title\">{newMenuInfo.title}</h2>\n        <p className=\"textView\">{newMenuInfo.views}</p>\n        <svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" viewBox=\"0 0 320 512\"><path fill=\"currentColor\" d=\"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\"></path></svg>\n      </article>\n      <article className=\"articleDown\">\n        <div className=\"boxUser\">\n          <img src={newMenuInfo.logo} alt=\"mi log\" className=\"logo\"/>\n          <h3 className=\"chanel\">\n            <span className=\"up\">{newMenuInfo.chanel}</span>\n            <span className=\"down\">{newMenuInfo.subs}</span>\n          </h3>\n        </div>\n        <button className=\"subs\">SUSCRIBIRSE</button>\n      </article>\n    </section>\n  )\n}\n","export const LOAD_INFO = 'LOAD_INFO'\n\nconst load_info = ( newArray ) => {\n  return {\n    type: LOAD_INFO,\n    payload: newArray\n  }\n}\n\nexport default load_info\n","import {useDispatch} from 'react-redux';\n\nimport './style/listPlayer.scss'\nimport load_info from '../../redux/actions/MenuInfoAction'\nimport DataJson from '../templates/Data.json'\n\nexport default function ListPlayer({ titulo, canal, vistas, image, classId }) {\n  const dispatch = useDispatch()\n\n  function sendArray(e) {\n    let elementoClase;\n    const boxGeneral = document.querySelector('.main')\n\n    if(e.target.tagName === 'svg' ||\n      e.target.tagName === 'path'){\n      alert('estamos trabajando en ello');\n    } else {\n      switch(true) {\n        case (e.target.tagName === 'IMG' ||\n               e.target.tagName === 'H3' ||\n               e.target.tagName === 'P'):\n          elementoClase = e.target.parentElement.parentElement.classList[1]\n          break;\n        case (e.target.classList.value === 'listBox__info'):\n          elementoClase = e.target.parentElement.classList[1]\n          break;\n        default: return console.log('esta no');\n      }\n      dispatch(load_info(DataJson[elementoClase - 1]))\n      setTimeout(() => {boxGeneral.scrollTop = 0}, 500);  // Para subir el scroll en .5 segundos\n    }\n  }\n  return (\n    <article className={`listBox ${classId}`} onClick={sendArray}>\n      <div className=\"listBox__image\">\n        <img src={image} alt=\"Imagen de la Portada\"/>\n      </div>\n      <div className=\"listBox__info\">\n        <svg aria-hidden=\"true\" focusable=\"false\" data-icon=\"ellipsis-v\" role=\"img\" viewBox=\"0 0 192 512\"><path fill=\"currentColor\" d=\"M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z\"></path></svg>\n        <h3>{titulo}</h3>\n        <p>{canal}</p>\n        <p>{vistas}</p>\n      </div>\n    </article>\n  )\n}\n","import './style/menuPlayer.scss'    //Style of Sass\nimport ListPlayer from '../organisms/ListPlayer'  //Component\nimport DataJson from './Data.json'\n\nexport default function MenuPlayer() {\n  return (\n    <section className=\"sectionListPlayer\">\n      {DataJson.map(elem => \n        <ListPlayer \n          key={elem.id}\n          titulo={elem.title}\n          canal={elem.chanel}\n          vistas={elem.views}\n          image={elem.image}\n          classId={elem.id}\n        />\n      )}\n    </section>\n  )\n}\n","import './App.scss';\n\n//Import Components\nimport DisplayPlayer from './components/templates/DisplayPlayer'\nimport MenuInfo from './components/templates/MenuInfo'\nimport MenuPlayer from './components/templates/MenuPlayer'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <DisplayPlayer />\n      <main className=\"main\">\n        <MenuInfo />\n        <MenuPlayer />\n      </main>\n    </div>\n  );\n}\n","import { LOAD_INFO } from '../actions/MenuInfoAction'\nconst defaultState = {\n  returnArray: {\n    title: 'Titulo Inicial',\n    chanel: 'Mi channel',\n    views: '0 views',\n    subs: '40,234 suscriptores',\n    logo: 'https://yt3.ggpht.com/yti/APfAmoEXZ6xJSGwYC7IMVFROOk1lV1krqk3m0Wbj8jhLew=s88-c-k-c0x00ffffff-no-rj-mo',\n    link: ''\n  }\n}\n\nconst newMenuInfo = ( state = defaultState, action ) => {\n  switch(action.type) {\n    case LOAD_INFO:\n      return {\n        ...state,\n        returnArray: action.payload \n      }\n    default: return state\n  }\n}\n\nexport default newMenuInfo\n","import { combineReducers } from \"redux\";\nimport newMenuInfo from './MenuInfoReducer'\n\nconst RootReducer = combineReducers({\n  newMenuInfo\n})\n\nexport default RootReducer\n\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\"; // para trabajar de manera asincrona \"no esta entendido del todo\"\n\n//The combine Reducers\nimport RootReducer from './reducers/RootReducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(RootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n))\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}